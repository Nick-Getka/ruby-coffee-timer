Duck Typing
-Defn: duck-typing is an application of the duck test in type safety
-- The duck test is: "If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck."
-- Or in cs terms: "If it looks like a int, swims like a int, and quacks like a int, then it probably is a int."
-- It requires that type checking be deferred to runtime.

! and ? at the end of method names
- It's just sugarcoating for readability
- Common Meaning
- - Methods ending in ! perform some permanent or potentially dangerous change
- - - ex) Kernel::exit causes a script to exit, while Kernel::exit! does so immediately, bypassing any exit handlers.
- - Methods ending in ? return a boolean
- - - ex) number.zero?
